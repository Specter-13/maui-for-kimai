<?xml version="1.0" encoding="utf-8" ?>
<mvvm:TinyView
    x:Class="MauiForKimai.Views.FavouritesDetailView"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:MauiForKimai.Controls"
    xmlns:helpers="clr-namespace:MauiForKimai.Helpers"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:model="clr-namespace:MauiForKimai.Core.Models;assembly=MauiForKimai.Core"
    xmlns:mvvm="clr-namespace:TinyMvvm;assembly=TinyMvvm.Maui"
    xmlns:skia="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
    xmlns:viewmodel="clr-namespace:MauiForKimai.ViewModels"
    x:DataType="viewmodel:FavouritesDetailViewModel">


    <ContentPage.Resources>
        <mct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        <Style x:Key="InvalidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Red" />
        </Style>
        <Style x:Key="ValidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Green" />
        </Style>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid
            Margin="0,0,15,0"
            HeightRequest="40"
            VerticalOptions="End">
            <Label
                Grid.Column="0"
                HorizontalOptions="Start"
                Style="{StaticResource TitleLabel}"
                Text="Detail"
                VerticalOptions="Center" />
        </Grid>
    </Shell.TitleView>


    <Grid Padding="10" RowDefinitions="60,*">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Button
            Grid.Column="2"
            Margin="10"
            Command="{Binding SaveCommand}"
            IsVisible="{Binding IsEdit}"
            Text="Save" />
        <Button
            Grid.Column="1"
            Margin="10"
            Command="{Binding DeleteCommand}"
            IsVisible="{Binding IsEdit}"
            Style="{StaticResource DeleteButton}"
            Text="Delete" />

        <Button
            Grid.Column="2"
            Margin="10"
            Command="{Binding CreateCommand}"
            IsVisible="{Binding IsEdit, Converter={StaticResource InvertedBoolConverter}}"
            Text="Create" />






        <ScrollView Grid.Row="1" Grid.ColumnSpan="3">
            <StackLayout>

                <Label Text="Customer" />
                <Entry
                    IsReadOnly="True"
                    Placeholder="Select customer"
                    Text="{Binding ChosenCustomer.Name}">
                    <Entry.GestureRecognizers>

                        <TapGestureRecognizer Command="{Binding ShowCustomerChooseViewCommand}" />

                    </Entry.GestureRecognizers>
                </Entry>

                <!--<Label Style="{StaticResource NotValidLabel}" Text="{Binding}" />-->
                <Button
                    Command="{Binding ShowCustomerChooseViewCommand}"
                    IsVisible="{OnIdiom Phone=False,
                                        Desktop=True}"
                    Text="Choose customer" />

                <Label Text="Project *" />
                <Entry
                    IsReadOnly="True"
                    Placeholder="Select project"
                    Text="{Binding ChosenProject.Name}">
                    <Entry.GestureRecognizers>

                        <TapGestureRecognizer Command="{Binding ShowProjectChooseViewCommand}" />

                    </Entry.GestureRecognizers>
                </Entry>

                <Label Text="Activity *" />
                <Entry
                    IsReadOnly="True"
                    Placeholder="Select Activity"
                    Text="{Binding ChosenActivity.Name}">
                    <Entry.GestureRecognizers>

                        <TapGestureRecognizer Command="{Binding ShowActivityChooseViewCommand}" />

                    </Entry.GestureRecognizers>
                </Entry>



                <Label Text="Description" />
                <Entry Text="{Binding Favourite.Description}" />

                <Label Text="Tags" />
                <Entry Text="{Binding Favourite.Tags}" />

                <!--  Gitlab issue id  -->
                <Label IsVisible="{Binding LoginContext.TimetrackingPermissions.HasGitlabPlugin}" Text="Gitlab issues id" />
                <Entry IsVisible="{Binding LoginContext.TimetrackingPermissions.HasGitlabPlugin}" Text="{Binding Favourite.GitlabIssueId}" />

                <!--  ROLE DEPENDAND!  -->
                <!--  Billable  -->
                <Label IsVisible="{Binding LoginContext.TimetrackingPermissions.CanEditBillable}" Text="Billable" />
                <Picker
                    x:Name="picker"
                    Title="Select a mode"
                    IsVisible="{Binding LoginContext.TimetrackingPermissions.CanEditBillable}"
                    SelectedItem="{Binding SelectedBillableMode}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Automatic</x:String>
                            <x:String>Yes</x:String>
                            <x:String>No</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <!--  Rates  -->

                <StackLayout IsVisible="{Binding LoginContext.TimetrackingPermissions.CanEditRate}">
                    <Label Text="Fixed rate" />
                    <Entry Keyboard="Numeric" Text="{Binding Favourite.FixedRate}">
                        <Entry.Behaviors>
                            <mct:NumericValidationBehavior Flags="ValidateOnValueChanged" InvalidStyle="{StaticResource InvalidEntryStyle}" />
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="Hourly rate" />
                    <Entry Keyboard="Numeric" Text="{Binding Favourite.HourlyRate}">
                        <Entry.Behaviors>
                            <mct:NumericValidationBehavior Flags="ValidateOnValueChanged" InvalidStyle="{StaticResource InvalidEntryStyle}" />
                        </Entry.Behaviors>
                    </Entry>
                </StackLayout>




                <!--  Exported  -->

                <StackLayout IsVisible="{Binding LoginContext.TimetrackingPermissions.CanEditExport}">
                    <Label Text="Exported" />
                    <CheckBox HorizontalOptions="Start" IsChecked="{Binding Favourite.Exported}" />
                </StackLayout>


            </StackLayout>
        </ScrollView>
    </Grid>
</mvvm:TinyView>