<?xml version="1.0" encoding="utf-8" ?>
<mvvm:TinyView
    x:Class="MauiForKimai.Views.Timesheets.TimesheetCreateView"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:enums="clr-namespace:MauiForKimai.Core.Enums;assembly=MauiForKimai.Core"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:mvvm="clr-namespace:TinyMvvm;assembly=TinyMvvm.Maui"
    xmlns:viewmodel="clr-namespace:MauiForKimai.ViewModels.Timesheets"
    x:DataType="viewmodel:TimesheetCreateViewModel"
    Shell.TabBarIsVisible="True">


    <Shell.TitleView>
        <Grid>

            <Label
                HorizontalOptions="Start"
                Style="{StaticResource TitleLabel}"
                Text="{Binding PageLabel}"
                TextColor="White"
                VerticalOptions="Center" />
        </Grid>
    </Shell.TitleView>

    <ContentPage.Resources>

        <ResourceDictionary>
            <mct:EnumToBoolConverter x:Key="ModeConverter" />
        </ResourceDictionary>

        <ResourceDictionary>
            <mct:EnumToBoolConverter x:Key="UserRoleConverter" />
        </ResourceDictionary>


        <Style x:Key="InvalidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Red" />
        </Style>
        <Style x:Key="ValidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Green" />
        </Style>
    </ContentPage.Resources>


    <Grid Padding="10">
        <Grid.RowDefinitions>
            <RowDefinition Height=".05*" />
            <RowDefinition Height=".05*" />
            <RowDefinition Height=".05*" />
            <RowDefinition Height=".80*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>



        <!--  Header with buttons  -->
        <Label
            Grid.Row="0"
            Grid.ColumnSpan="2"
            HorizontalOptions="Center"
            Style="{StaticResource LargeLabel}"
            Text="{Binding Duration}"
            VerticalOptions="Center" />

        <Label
            Grid.Row="1"
            Grid.ColumnSpan="2"
            HorizontalOptions="Center"
            Style="{StaticResource MediumLabel}"
            Text="{Binding BeginDateString}"
            VerticalOptions="Center" />

        <HorizontalStackLayout
            Grid.Row="2"
            Grid.ColumnSpan="2"
            Margin="10"
            Padding="10"
            HorizontalOptions="EndAndExpand"
            VerticalOptions="Center">



            <Button
                Margin="10"
                HeightRequest="40"
                IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Edit}}"
                Text="Delete" />

            <Button
                Margin="10"
                Command="{Binding CancelCommand}"
                HeightRequest="40"
                Text="Cancel" />
            <Button
                Margin="10"
                Command="{Binding StartTimesheetCommand}"
                HeightRequest="40"
                IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Start}}"
                Text="Start" />
            <Button
                Margin="10"
                HeightRequest="40"
                IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Create}}"
                Text="Create" />
            <Button
                Margin="10"
                Command="{Binding SaveCommand}"
                HeightRequest="40"
                IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Edit}}"
                Text="Save" />




        </HorizontalStackLayout>

        <ScrollView
            Grid.Row="3"
            Grid.ColumnSpan="2"
            Padding="10">
            <VerticalStackLayout>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--  From Time  -->
                    <VerticalStackLayout Grid.Row="0">
                        <Label Text="Begin Time" />
                        <TimePicker Format="HH:mm:ss" Time="{Binding BeginTime}" />
                    </VerticalStackLayout>
                    <!--  From Date  -->
                    <VerticalStackLayout Grid.Row="0" Grid.Column="1">
                        <Label Text="Begin Date" />
                        <DatePicker Date="{Binding BeginDate}" />

                    </VerticalStackLayout>


                    <VerticalStackLayout Grid.Row="1" IsVisible="{Binding IsCreateOrEdit}">
                        <Label Text="End Time" />
                        <TimePicker Format="HH:mm:ss" Time="{Binding EndTime}" />
                    </VerticalStackLayout>

                    <VerticalStackLayout
                        Grid.Row="1"
                        Grid.Column="1"
                        IsVisible="{Binding IsCreateOrEdit}">
                        <Label Text="End Date" />
                        <DatePicker Date="{Binding EndDate}" />

                    </VerticalStackLayout>



                </Grid>
                <!--  Customer  -->
                <Label Text="Customer" />
                <Entry
                    IsReadOnly="True"
                    Placeholder="Select customer"
                    Text="{Binding ChosenCustomer.Name}">
                    <Entry.GestureRecognizers>

                        <TapGestureRecognizer Command="{Binding ShowCustomerChooseViewCommand}" />

                    </Entry.GestureRecognizers>
                </Entry>
                <Button
                    Command="{Binding ShowCustomerChooseViewCommand}"
                    IsVisible="{OnIdiom Phone=False,
                                        Desktop=True}"
                    Text="Choose customer" />
                <!--  Project  -->
                <Label Text="Project *" />
                <Entry
                    IsReadOnly="True"
                    Placeholder="Select project"
                    Text="{Binding ChosenProject.Name}">
                    <Entry.GestureRecognizers>

                        <TapGestureRecognizer Command="{Binding ShowProjectChooseViewCommand}" />

                    </Entry.GestureRecognizers>
                </Entry>
                <Label
                    IsVisible="{Binding IsProjectNotValid}"
                    Style="{StaticResource NotValidLabel}"
                    Text="Project is required" />
                <Button
                    Command="{Binding ShowProjectChooseViewCommand}"
                    IsVisible="{OnIdiom Phone=False,
                                        Desktop=True}"
                    Text="Choose project" />
                <!--  Activity  -->
                <Label Text="Activity *" />

                <Entry
                    IsReadOnly="True"
                    Placeholder="Select Activity"
                    Text="{Binding ChosenActivity.Name}">
                    <Entry.GestureRecognizers>

                        <TapGestureRecognizer Command="{Binding ShowActivityChooseViewCommand}" />

                    </Entry.GestureRecognizers>
                </Entry>
                <Label
                    IsVisible="{Binding IsActivityNotValid}"
                    Style="{StaticResource NotValidLabel}"
                    Text="Activity is required" />
                <Button
                    Command="{Binding ShowActivityChooseViewCommand}"
                    IsVisible="{OnIdiom Phone=False,
                                        Desktop=True}"
                    Text="Choose Activity" />
                <!--  Description  -->
                <Label Text="Description" />
                <Entry Text="{Binding Timesheet.Description}" />
                <!--  Tags  -->
                <Label Text="Tags" />
                <Entry Text="{Binding Timesheet.Tags}" />
                <Label
                    IsVisible="{Binding IsTagNotValid}"
                    Style="{StaticResource NotValidLabel}"
                    Text="Tag must have at least 2 characters or be empty" />


                <!--  ROLE DEPENDAND!  -->
                <!--  Billable  -->
                <Label IsVisible="{Binding ApiStateProvider.IsTeamlead}" Text="Billable" />
                <Picker
                    x:Name="picker"
                    Title="Select a mode"
                    IsVisible="{Binding ApiStateProvider.IsTeamlead}"
                    SelectedItem="{Binding SelectedBillableMode}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Automatic</x:String>
                            <x:String>Yes</x:String>
                            <x:String>No</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
                <!--  Rates  -->
                <Grid Padding="10" IsVisible="{Binding ApiStateProvider.IsAdmin}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".50*" />
                        <ColumnDefinition Width=".50*" />
                    </Grid.ColumnDefinitions>

                    <VerticalStackLayout Grid.Column="0">
                        <Label Text="Fixed rate" />
                        <Entry Keyboard="Numeric" Text="{Binding Timesheet.FixedRate}">
                            <Entry.Behaviors>
                                <mct:NumericValidationBehavior Flags="ValidateOnValueChanged" InvalidStyle="{StaticResource InvalidEntryStyle}" />
                            </Entry.Behaviors>
                        </Entry>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Column="1">
                        <Label Text="Hourly rate" />
                        <Entry Keyboard="Numeric" Text="{Binding Timesheet.HourlyRate}">
                            <Entry.Behaviors>
                                <mct:NumericValidationBehavior Flags="ValidateOnValueChanged" InvalidStyle="{StaticResource InvalidEntryStyle}" />
                            </Entry.Behaviors>
                        </Entry>
                    </VerticalStackLayout>

                </Grid>

                <Grid Padding="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".50*" />
                        <ColumnDefinition Width=".50*" />
                    </Grid.ColumnDefinitions>
                    <!--  Exported  -->
                    <VerticalStackLayout Grid.Column="0" IsVisible="{Binding ApiStateProvider.IsTeamlead}">
                        <Label Text="Exported" />
                        <CheckBox IsChecked="{Binding Timesheet.Exported}" />
                    </VerticalStackLayout>

                </Grid>
                <!--  ROLE DEPENDAND!  -->

            </VerticalStackLayout>


        </ScrollView>
    </Grid>


</mvvm:TinyView>