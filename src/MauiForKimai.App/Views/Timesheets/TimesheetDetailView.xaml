<?xml version="1.0" encoding="utf-8" ?>
<mvvm:TinyView
    x:Class="MauiForKimai.Views.TimesheetDetailView"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:enums="clr-namespace:MauiForKimai.Core.Enums;assembly=MauiForKimai.Core"
    xmlns:helpers="clr-namespace:MauiForKimai.Helpers"
    xmlns:input="clr-namespace:InputKit.Shared.Controls;assembly=InputKit.Maui"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:mvvm="clr-namespace:TinyMvvm;assembly=TinyMvvm.Maui"
    xmlns:validation="clr-namespace:InputKit.Shared.Validations;assembly=InputKit.Maui"
    xmlns:viewmodel="clr-namespace:MauiForKimai.ViewModels"
    x:DataType="viewmodel:TimesheetDetailViewModel"
    Shell.DisabledColor="White"
    Shell.TabBarIsVisible="True">




    <Shell.TitleView>
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label
                HorizontalOptions="Start"
                Style="{StaticResource TitleLabel}"
                Text="{Binding PageLabel}"
                TextColor="White"
                VerticalOptions="Center" />


            <Button
                Grid.Column="1"
                Margin="10"
                Command="{Binding AddToFavouritesCommand}"
                HorizontalOptions="End"
                IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Edit}}"
                Style="{StaticResource Key=RecentRestartButton}"
                VerticalOptions="End">
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="MaterialDesignIcons"
                        Glyph="{x:Static helpers:MaterialDesignIconsFonts.StarPlusOutline}"
                        Size="25" />
                </Button.ImageSource>
            </Button>
        </Grid>
    </Shell.TitleView>

    <ContentPage.Resources>

        <ResourceDictionary>
            <mct:EnumToBoolConverter x:Key="ModeConverter" />
        </ResourceDictionary>

        <ResourceDictionary>
            <mct:EnumToBoolConverter x:Key="UserRoleConverter" />
        </ResourceDictionary>

    </ContentPage.Resources>


    <Grid Padding="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="90" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>



        <!--  Header with buttons  -->
        <Label
            Grid.Row="0"
            Grid.ColumnSpan="2"
            HorizontalOptions="Center"
            Style="{StaticResource LargeLabel}"
            Text="{Binding TimeWrapper.Duration}"
            VerticalOptions="Center" />

        <Label
            Grid.Row="1"
            Grid.ColumnSpan="2"
            HorizontalOptions="Center"
            Style="{StaticResource MediumLabel}"
            Text="{Binding TimeWrapper.BeginFullString}"
            VerticalOptions="Center" />





        <Button
            Grid.Row="2"
            Grid.Column="0"
            Margin="10"
            Command="{Binding DeleteCommand}"
            HeightRequest="40"
            HorizontalOptions="Center"
            IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Edit}}"
            Style="{StaticResource DeleteButton}"
            Text="Delete"
            WidthRequest="100" />


        <Button
            Grid.Row="2"
            Grid.Column="1"
            Margin="10"
            Command="{Binding StartTimesheetCommand}"
            HeightRequest="40"
            HorizontalOptions="Center"
            IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Start}}"
            Text="Start"
            WidthRequest="100" />
        <Button
            Grid.Row="2"
            Grid.Column="1"
            Margin="10"
            Command="{Binding CreateCommand}"
            HeightRequest="40"
            HorizontalOptions="Center"
            IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Create}}"
            Text="Create"
            WidthRequest="100" />
        <Button
            Grid.Row="2"
            Grid.Column="1"
            Margin="10"
            Command="{Binding SaveCommand}"
            HeightRequest="40"
            HorizontalOptions="Center"
            IsVisible="{Binding Mode, Converter={StaticResource ModeConverter}, ConverterParameter={x:Static enums:TimesheetDetailMode.Edit}}"
            Text="Save"
            WidthRequest="100" />


        <ScrollView Grid.Row="3" Grid.ColumnSpan="2">
            <StackLayout>


                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--  From Time  -->
                    <StackLayout Grid.Row="0">
                        <Label Text="Begin" />
                        <TimePicker Format="HH:mm" Time="{Binding TimeWrapper.BeginTime}" />
                    </StackLayout>
                    <!--  From Date  -->

                    <StackLayout Grid.Row="0" Grid.Column="1">
                        <Label />
                        <DatePicker Date="{Binding TimeWrapper.BeginDate}" />
                    </StackLayout>



                    <StackLayout Grid.Row="1" IsVisible="{Binding IsCreateOrEdit}">
                        <Label Text="End" />
                        <TimePicker
                            x:Name="BeginTimePicker"
                            Format="HH:mm"
                            Time="{Binding TimeWrapper.EndTime}" />
                    </StackLayout>


                    <StackLayout
                        Grid.Row="1"
                        Grid.Column="1"
                        IsVisible="{Binding IsCreateOrEdit}">
                        <Label />
                        <DatePicker
                            Date="{Binding TimeWrapper.EndDate}"
                            IsVisible="{Binding IsCreateOrEdit}"
                            VerticalOptions="End" />
                    </StackLayout>




                    <!--  Duration  -->
                    <StackLayout
                        Grid.Row="2"
                        Grid.ColumnSpan="2"
                        IsVisible="{Binding IsCreateOrEdit}">
                        <Label Text="Duration" />

                        <Entry
                            x:Name="HoursEntry"
                            HorizontalTextAlignment="Center"
                            IsReadOnly="True"
                            Keyboard="Numeric"
                            Placeholder="00"
                            Text="{Binding TimeWrapper.Duration}"
                            VerticalTextAlignment="Center">

                            <Entry.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding DurationTappedCommand}" />
                            </Entry.GestureRecognizers>

                        </Entry>

                    </StackLayout>

                </Grid>

                <VerticalStackLayout>
                    <!--<input:FormView Grid.Row="3" Grid.ColumnSpan="2">






                        <Grid ColumnDefinitions="6*,100">
                            <input:AdvancedEntry
                                Title="Customer"
                                BackgroundColor="Transparent"
                                BorderColor="Transparent"
                                IconImage="{FontImageSource FontFamily=MaterialDesignIcons,
                                                            Glyph={x:Static helpers:MaterialDesignIconsFonts.Check},
                                                            Color={StaticResource AccentColor}}"
                                Text="{Binding ChosenCustomer.Name}"
                                TextColor="White">
                                <input:AdvancedEntry.Validations>
                                    <validation:RequiredValidation />
                                </input:AdvancedEntry.Validations>

                                <input:AdvancedEntry.GestureRecognizers>

                                    <TapGestureRecognizer Command="{Binding ShowCustomerChooseViewCommand}" />

                                </input:AdvancedEntry.GestureRecognizers>

                            </input:AdvancedEntry>
                            <Button
                                Grid.Column="1"
                                Command="{Binding ShowCustomerChooseViewCommand}"
                                HeightRequest="42"
                                Text="Select"
                                VerticalOptions="Center"
                                WidthRequest="80" />
                        </Grid>
                        <Button input:FormView.IsSubmitButton="True" Text="Submit" />
                    </input:FormView>-->


                    <!--  Customer  -->

                    <Label Text="Customer" />
                    <Entry
                        IsReadOnly="True"
                        Placeholder="Select customer"
                        Text="{Binding ChosenCustomer.Name}">
                        <Entry.GestureRecognizers>

                            <TapGestureRecognizer Command="{Binding ShowCustomerChooseViewCommand}" />

                        </Entry.GestureRecognizers>
                    </Entry>
                    <Button
                        Command="{Binding ShowCustomerChooseViewCommand}"
                        IsVisible="{OnIdiom Phone=False,
                                            Desktop=True}"
                        Text="Choose customer" />
                    <!--  Project  -->
                    <Label Text="Project *" />
                    <Entry
                        IsReadOnly="True"
                        Placeholder="Select project"
                        Text="{Binding ChosenProject.Name}">
                        <Entry.GestureRecognizers>

                            <TapGestureRecognizer Command="{Binding ShowProjectChooseViewCommand}" />

                        </Entry.GestureRecognizers>
                    </Entry>
                    <Label
                        IsVisible="{Binding IsProjectNotValid}"
                        Style="{StaticResource NotValidLabel}"
                        Text="Project is required" />
                    <Button
                        Command="{Binding ShowProjectChooseViewCommand}"
                        IsVisible="{OnIdiom Phone=False,
                                            Desktop=True}"
                        Text="Choose project" />
                    <!--  Activity  -->
                    <Label Text="Activity *" />

                    <Entry
                        IsReadOnly="True"
                        Placeholder="Select Activity"
                        Text="{Binding ChosenActivity.Name}">
                        <Entry.GestureRecognizers>

                            <TapGestureRecognizer Command="{Binding ShowActivityChooseViewCommand}" />

                        </Entry.GestureRecognizers>
                    </Entry>
                    <Label
                        IsVisible="{Binding IsActivityNotValid}"
                        Style="{StaticResource NotValidLabel}"
                        Text="Activity is required" />
                    <Button
                        Command="{Binding ShowActivityChooseViewCommand}"
                        IsVisible="{OnIdiom Phone=False,
                                            Desktop=True}"
                        Text="Choose Activity" />
                    <!--  Description  -->
                    <Label Text="Description" />
                    <Entry Text="{Binding Timesheet.Description}" />
                    <!--  Tags  -->
                    <Label Text="Tags" />
                    <Entry Text="{Binding Timesheet.Tags}" />
                    <Label
                        IsVisible="{Binding IsTagNotValid}"
                        Style="{StaticResource NotValidLabel}"
                        Text="Tag must have at least 2 characters or be empty" />


                    <!--  ROLE DEPENDAND!  -->
                    <!--  Billable  -->
                    <Label IsVisible="{Binding ApiStateProvider.TimetrackingPermissions.CanEditBillable}" Text="Billable" />
                    <Picker
                        x:Name="picker"
                        Title="Select a mode"
                        IsVisible="{Binding ApiStateProvider.TimetrackingPermissions.CanEditBillable}"
                        SelectedItem="{Binding SelectedBillableMode}">
                        <Picker.ItemsSource>
                            <x:Array Type="{x:Type x:String}">
                                <x:String>Automatic</x:String>
                                <x:String>Yes</x:String>
                                <x:String>No</x:String>
                            </x:Array>
                        </Picker.ItemsSource>
                    </Picker>
                    <!--  Rates  -->
                    <Grid Padding="10" IsVisible="{Binding ApiStateProvider.TimetrackingPermissions.CanEditRate}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width=".50*" />
                            <ColumnDefinition Width=".50*" />
                        </Grid.ColumnDefinitions>

                        <VerticalStackLayout Grid.Column="0">
                            <Label Text="Fixed rate" />
                            <Entry Keyboard="Numeric" Text="{Binding Timesheet.FixedRate}">
                                <Entry.Behaviors>
                                    <mct:NumericValidationBehavior Flags="ValidateOnValueChanged" InvalidStyle="{StaticResource InvalidEntryStyle}" />
                                </Entry.Behaviors>
                            </Entry>
                        </VerticalStackLayout>

                        <VerticalStackLayout Grid.Column="1">
                            <Label Text="Hourly rate" />
                            <Entry Keyboard="Numeric" Text="{Binding Timesheet.HourlyRate}">
                                <Entry.Behaviors>
                                    <mct:NumericValidationBehavior Flags="ValidateOnValueChanged" InvalidStyle="{StaticResource InvalidEntryStyle}" />
                                </Entry.Behaviors>
                            </Entry>
                        </VerticalStackLayout>

                    </Grid>

                    <Grid Padding="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width=".50*" />
                            <ColumnDefinition Width=".50*" />
                        </Grid.ColumnDefinitions>
                        <!--  Exported  -->
                        <VerticalStackLayout Grid.Column="0" IsVisible="{Binding ApiStateProvider.TimetrackingPermissions.CanEditExport}">
                            <Label Text="Exported" />
                            <CheckBox IsChecked="{Binding Timesheet.Exported}" />
                        </VerticalStackLayout>

                    </Grid>
                    <!--  ROLE DEPENDAND!  -->
                </VerticalStackLayout>

            </StackLayout>
        </ScrollView>


    </Grid>


</mvvm:TinyView>